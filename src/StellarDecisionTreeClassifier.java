import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.nio.file.Files;
import java.nio.file.Paths;

/**
 * Classifier program that is dynamically generated by the training program.
 * @author Madison Flaherty (mef4824)
 * 2/24/2016 
 */
public class StellarDecisionTreeClassifier implements Classifier{
    /** The raw data that will be classified */
    private double[][] rawData;
    /** The number of attributes to be examined */
    private static final int NUM_ATTRIBUTES = 2;
    /** The number of classes in the classifier */
    private static final int NUM_CLASSES = 7;
    private static String[] attributes;

    /** Constructor for the classifier */
    public StellarDecisionTreeClassifier(double[][] testingData){
        this.rawData = testingData;
    }
    /** Using the derived branching system classifies a given data point */
    private int classify(double[] attr) {
    if(attr[1] <= -3.3189433000000097) { 
    if(attr[1] <= -8.587763350000017) { 
    if(attr[1] <= -13.702450299999953) { 
    if(attr[0] <= -28.190545) { 
    return 0;
    } else {
    if(attr[1] <= -108.458895) { 
    return 3;
    } else {
    if(attr[1] <= -41.21854255) { 
    if(attr[0] <= 23.942504) { 
    return 0;
    } else {
    if(attr[0] <= 130.301675) { 
    if(attr[0] <= 86.907584) { 
    return 2;
    } else {
    return 4;
    }
    } else {
    return 2;
    }
    }
    } else {
    return 2;
    }
    }
    }
    } else {
    if(attr[0] <= 41.20841614999999) { 
    if(attr[1] <= -9.966349700000002) { 
    if(attr[0] <= -27.3456945) { 
    if(attr[0] <= -33.867251) { 
    return 1;
    } else {
    return 0;
    }
    } else {
    if(attr[0] <= -26.710471) { 
    return 0;
    } else {
    if(attr[0] <= -5.954479450000004) { 
    return 2;
    } else {
    if(attr[0] <= 14.931955449999997) { 
    return 3;
    } else {
    return 2;
    }
    }
    }
    }
    } else {
    return 2;
    }
    } else {
    if(attr[0] <= 92.30834295) { 
    if(attr[0] <= 67.89571199999999) { 
    return 3;
    } else {
    return 2;
    }
    } else {
    return 3;
    }
    }
    }
    } else {
    if(attr[1] <= -5.948904499999999) { 
    if(attr[0] <= -11.209999500000002) { 
    return 2;
    } else {
    if(attr[0] <= 23.970088800000006) { 
    if(attr[1] <= -7.502708750000004) { 
    if(attr[0] <= 0.9227019500000002) { 
    return 2;
    } else {
    if(attr[0] <= 2.150895) { 
    return 3;
    } else {
    return 2;
    }
    }
    } else {
    if(attr[0] <= -3.252985749999999) { 
    return 3;
    } else {
    if(attr[0] <= 2.341493) { 
    return 2;
    } else {
    return 3;
    }
    }
    }
    } else {
    return 3;
    }
    }
    } else {
    if(attr[0] <= -32.28390675) { 
    if(attr[0] <= -40.65379295) { 
    return 6;
    } else {
    if(attr[0] <= -39.3084546) { 
    if(attr[0] <= -40.500471) { 
    return 6;
    } else {
    if(attr[1] <= -4.754626) { 
    return 3;
    } else {
    return 5;
    }
    }
    } else {
    if(attr[1] <= -5.6554527000000006) { 
    return 2;
    } else {
    if(attr[0] <= -35.90243199999997) { 
    if(attr[0] <= -38.77296075) { 
    if(attr[0] <= -39.078042599999996) { 
    if(attr[0] <= -39.251169) { 
    return 3;
    } else {
    return 6;
    }
    } else {
    return 3;
    }
    } else {
    if(attr[0] <= -36.53782575000005) { 
    if(attr[0] <= -37.04577755000002) { 
    if(attr[0] <= -37.961961) { 
    return 2;
    } else {
    if(attr[0] <= -37.522284) { 
    return 4;
    } else {
    if(attr[0] <= -37.403184) { 
    return 3;
    } else {
    if(attr[0] <= -37.327133) { 
    return 5;
    } else {
    return 6;
    }
    }
    }
    }
    } else {
    return 2;
    }
    } else {
    if(attr[0] <= -36.16092900000003) { 
    if(attr[0] <= -36.326338199999974) { 
    return 3;
    } else {
    if(attr[0] <= -36.2817) { 
    return 4;
    } else {
    return 3;
    }
    }
    } else {
    return 2;
    }
    }
    }
    } else {
    if(attr[1] <= -5.630368) { 
    return 2;
    } else {
    return 3;
    }
    }
    }
    }
    }
    } else {
    if(attr[1] <= -4.354629999999995) { 
    if(attr[1] <= -5.3696863000000015) { 
    if(attr[0] <= -25.2792976) { 
    if(attr[0] <= -30.359372) { 
    return 3;
    } else {
    return 2;
    }
    } else {
    if(attr[1] <= -5.611340299999995) { 
    return 3;
    } else {
    if(attr[0] <= -23.922444) { 
    return 3;
    } else {
    return 4;
    }
    }
    }
    } else {
    return 3;
    }
    } else {
    if(attr[0] <= -31.551823) { 
    return 5;
    } else {
    if(attr[1] <= -3.9997719999999983) { 
    if(attr[0] <= -29.903268) { 
    return 3;
    } else {
    if(attr[1] <= -4.277104) { 
    return 3;
    } else {
    if(attr[0] <= -7.726488500000008) { 
    return 4;
    } else {
    if(attr[0] <= -6.629439) { 
    return 3;
    } else {
    return 4;
    }
    }
    }
    }
    } else {
    if(attr[0] <= -11.770112849999997) { 
    if(attr[0] <= -24.79074949999999) { 
    return 3;
    } else {
    if(attr[0] <= -15.36008219999999) { 
    if(attr[1] <= -3.8442447) { 
    if(attr[0] <= -16.735595) { 
    return 3;
    } else {
    return 4;
    }
    } else {
    return 4;
    }
    } else {
    return 3;
    }
    }
    } else {
    return 3;
    }
    }
    }
    }
    }
    }
    }
    } else {
    if(attr[0] <= 4.740470099999996) { 
    if(attr[0] <= -31.423909200000004) { 
    if(attr[1] <= -1.92361255) { 
    if(attr[0] <= -37.790468850000025) { 
    return 6;
    } else {
    if(attr[0] <= -36.663351) { 
    return 5;
    } else {
    if(attr[0] <= -36.641134) { 
    return 6;
    } else {
    return 5;
    }
    }
    }
    } else {
    return 6;
    }
    } else {
    if(attr[1] <= 5.734780199999999) { 
    if(attr[1] <= -0.6654789000000001) { 
    if(attr[0] <= -27.7532595) { 
    if(attr[0] <= -30.480013600000007) { 
    return 5;
    } else {
    if(attr[1] <= -2.3126789999999993) { 
    return 3;
    } else {
    if(attr[0] <= -29.300868899999998) { 
    return 2;
    } else {
    return 5;
    }
    }
    }
    } else {
    if(attr[0] <= -10.897057349999997) { 
    if(attr[1] <= -2.0807515500000013) { 
    if(attr[0] <= -22.961366400000003) { 
    if(attr[0] <= -27.430917) { 
    return 4;
    } else {
    return 3;
    }
    } else {
    if(attr[1] <= -2.6870433999999994) { 
    if(attr[0] <= -19.640970000000006) { 
    if(attr[0] <= -21.431247099999993) { 
    if(attr[0] <= -22.006102) { 
    return 4;
    } else {
    return 3;
    }
    } else {
    return 4;
    }
    } else {
    return 3;
    }
    } else {
    return 4;
    }
    }
    } else {
    return 3;
    }
    } else {
    if(attr[0] <= -2.8094624999999986) { 
    if(attr[0] <= -5.537436000000001) { 
    return 4;
    } else {
    if(attr[0] <= -4.251002) { 
    return 6;
    } else {
    return 4;
    }
    }
    } else {
    return 3;
    }
    }
    }
    } else {
    if(attr[0] <= -17.705865899999985) { 
    if(attr[0] <= -30.731727) { 
    return 2;
    } else {
    if(attr[1] <= 2.9506313999999993) { 
    return 5;
    } else {
    if(attr[0] <= -27.041445000000007) { 
    return 6;
    } else {
    if(attr[1] <= 3.1838322) { 
    return 3;
    } else {
    return 5;
    }
    }
    }
    }
    } else {
    if(attr[1] <= 2.1448886000000003) { 
    return 3;
    } else {
    return 5;
    }
    }
    }
    } else {
    if(attr[0] <= -0.9770590000000032) { 
    if(attr[0] <= -22.19555950000001) { 
    return 6;
    } else {
    if(attr[1] <= 12.1909597) { 
    if(attr[1] <= 8.8908106) { 
    return 5;
    } else {
    if(attr[0] <= -16.825974399999993) { 
    return 6;
    } else {
    return 5;
    }
    }
    } else {
    return 6;
    }
    }
    } else {
    return 5;
    }
    }
    }
    } else {
    if(attr[1] <= 16.509178) { 
    if(attr[1] <= 9.45442965) { 
    if(attr[0] <= 22.7021746) { 
    if(attr[0] <= 16.5651026) { 
    return 3;
    } else {
    if(attr[0] <= 21.20807700000001) { 
    if(attr[1] <= 2.0433386499999995) { 
    if(attr[1] <= -1.974071) { 
    return 3;
    } else {
    return 4;
    }
    } else {
    return 3;
    }
    } else {
    return 3;
    }
    }
    } else {
    if(attr[1] <= 0.3566809999999999) { 
    return 4;
    } else {
    if(attr[1] <= 5.651763399999998) { 
    if(attr[1] <= 3.8505380000000002) { 
    if(attr[0] <= 33.75328099999999) { 
    if(attr[0] <= 31.720312500000013) { 
    if(attr[0] <= 25.061081) { 
    return 3;
    } else {
    return 4;
    }
    } else {
    return 3;
    }
    } else {
    return 4;
    }
    } else {
    return 3;
    }
    } else {
    return 4;
    }
    }
    }
    } else {
    if(attr[0] <= 74.803489) { 
    if(attr[0] <= 70.95553499999998) { 
    if(attr[0] <= 27.429416249999996) { 
    if(attr[0] <= 19.861437) { 
    return 5;
    } else {
    return 3;
    }
    } else {
    return 5;
    }
    } else {
    return 3;
    }
    } else {
    return 3;
    }
    }
    } else {
    if(attr[0] <= 166.5487326) { 
    if(attr[0] <= 51.091230800000005) { 
    if(attr[1] <= 36.24534295) { 
    return 5;
    } else {
    return 6;
    }
    } else {
    if(attr[1] <= 26.1527757) { 
    if(attr[0] <= 68.23406705) { 
    return 5;
    } else {
    return 3;
    }
    } else {
    return 5;
    }
    }
    } else {
    if(attr[0] <= 358.9426947999998) { 
    if(attr[1] <= 47.072048300000006) { 
    return 3;
    } else {
    return 6;
    }
    } else {
    return 4;
    }
    }
    }
    }
    }
    }
    /**
     * Classifies all of the data points in the the supplied data file
     */
    public double[] classifyAll(){
        double[] classifications = new double[rawData.length];
        for(int i=0; i<rawData.length; i++) {
            classifications[i] = classify(rawData[i]);
        }
        return classifications;
    }

    /**
     * Evalates the classifications supplied compared to the actual classes
     * @param classifications the classifications generated by this dec. tree
     */
    public void evaluate(double[] classifications){
        double total = 0;
        double right = 0;
        double wrong = 0;
        for( int i = 0; i < rawData.length; i++ ){
            int clssGuess = (int) classifications[i];
            int clssActual = (int) rawData[i][NUM_ATTRIBUTES];
            //System.out.println(attribute);
            if(clssGuess == clssActual) {
                right += 1;
            } else {
                wrong += 1;
            }
            total += 1;
        }
        System.out.println("Decision Tree Results: ");
        System.out.println("-------------------------");
        System.out.println("Right: " + right/total);
        System.out.println("Wrong: " + wrong/total);
    }    public void confusionMatrix(double[] classifications) {
        int[][] cm = new int[NUM_CLASSES][NUM_CLASSES];
        // initialize the confusion matrix
        for(int i=0;i<NUM_CLASSES;i++) {
            for(int j=0;j<NUM_CLASSES;j++) {
                cm[i][j] = 0;
            }
        }

        // add everything up
        for(int i=0;i<rawData.length;i++){
            cm[(int) rawData[i][NUM_ATTRIBUTES]][(int) classifications[i]] += 1;
        }

        System.out.println("Decision Tree");
        System.out.println("-------------------------------------------------");
        System.out.println("                       Predicted");
        System.out.print("Actual   ");
        for(int i=0; i<NUM_CLASSES; i++) {
            System.out.printf("%5d", i);
        }
        System.out.println("\n");
        for(int i = 0; i<NUM_CLASSES; i++) {
            System.out.print(" " + i + "       ");
            for(int j = 0; j<NUM_CLASSES; j++) {
                System.out.printf("%5d",cm[i][j]);
            }
            System.out.println();
        }}
}